function fish_user_key_bindings
  bind \cr 'peco_select_history (commandline -b)'
  bind \c] peco_select_ghq_repository
  bind \cj do_enter
end

function fish_prompt
	set_color $fish_color_cwd
	printf '[%s]' (pwd)
	set_color normal
	printf '%s ' (__fish_git_prompt)
	set_color $fish_color_cwd
	printf "\n>> "
	set_color $fish_color_cwd
	set_color normal
end

set fish_theme fishface


function cd
  builtin cd $argv
  ls -a
end

alias ls="ls -a -G"
alias rm='rmtrash'
alias emacs="emacs -nw"

function do_enter
  set -l query (commandline)

  if test -n $query
    echo
    eval $query
    commandline ''
  else
    echo
    ls
    if test (git rev-parse --is-inside-work-tree 2> /dev/null)
      echo
      echo -e "\e[0;33m--- git status ---\e[0m"
      git status -sb
    end
  end
  commandline -f repaint
end

set fish_greeting ""
set -gx OMF_PATH "/Users/takaakihirano/.local/share/omf"
set -gx OMF_CONFIG "/Users/takaakihirano/.config/omf"
source $OMF_PATH/init.fish

set normal (set_color normal)
set magenta (set_color magenta)
set yellow (set_color yellow)
set green (set_color green)
set red (set_color red)
set gray (set_color -o black)

# Fish git prompt
set __fish_git_prompt_showdirtystate 'yes'
set __fish_git_prompt_showstashstate 'yes'
set __fish_git_prompt_showupstream 'yes'
set __fish_git_prompt_showuntrackedfiles 'yes'
set __fish_git_prompt_show_informative_status 'yes'
set __fish_git_prompt_showcolorhints 'yes'

set __fish_git_prompt_color_branch yellow
set __fish_git_prompt_color_upstream_ahead green
set __fish_git_prompt_color_upstream_behind red

# Status Chars
#set __fish_git_prompt_char_dirtystate '⚡'
#set __fish_git_prompt_char_stagedstate '→'
#set __fish_git_prompt_char_untrackedfiles '☡'
#set __fish_git_prompt_char_stashstate '↩'
#set __fish_git_prompt_char_upstream_ahead '+'
#set __fish_git_prompt_char_upstream_behind '-'


